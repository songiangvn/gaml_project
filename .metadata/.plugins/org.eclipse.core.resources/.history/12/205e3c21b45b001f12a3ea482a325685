/**
* Name: Evacuation
* Based on the internal empty template. 
* Author: SON GIANG
* Tags: 
*/


model Evacuation

/* Insert your model definition here */

// Model có thể bao gồm nhiều điểm safety, evacuation point khác nhau 
global {
	int casualties <- 0; // thương vong / số người chết
	int nb_of_people <- 1000;
	
	// phạm vi nhận thức của mỗi người là khác nhau --> định nghĩa các cái attribute của global sẽ giống như định nghĩa 1 const 
	float min_perception_distance <- 50.0;
	float max_perception_distance <- 500.0;
	
	//geometry shape <- square(500#m);
	float step <- 10#sec;
	
	file water_body <- file("D:/WorkingSpace/GAMA/Hazard Evacuation/includes/sea_environment.shp");
	file evac_points <- file("D:/WorkingSpace/GAMA/Hazard Evacuation/includes/evacuation_environment.shp");
	file road_file <- file("D:/WorkingSpace/GAMA/Hazard Evacuation/includes/road_environment.shp");
	file buildings <- file("D:/WorkingSpace/GAMA/Hazard Evacuation/includes/building_environment.shp");
	// new geometry shape definition
	geometry shape <- envelope(envelope(road_file) + envelope(water_body));
	
	graph<geometry, geometry> road_network; // đồ thị biểu diễn mạng lười đường gồm cái nút (points) và các cạnh(lines)
	// giống như biểu diễn vector
	
	
	init {
//		create hazard;
//		create evacuation_point {
//			location <- {0, 0};
//		}
		create hazard from: water_body;
		create evacuation_point from: evac_points;
		create road from: road_file;
		create building from: buildings;
		
		create inhabitant number: nb_of_people{
			safety_point <- any(evacuation_point);
		}
	}
	
	reflex stop_simu when: empty(inhabitant){
		do pause;
	}
}

// mỗi phần tử trong model đều là 1 agent và phải định nghĩa đặc điểm cho nó 
species road {
	aspect default {
		draw shape color: #black;
	}
}

species building {
	aspect default {
		draw shape color: #gray border: #black;
	}
}
// define the catastrophe --> đinh nghĩa cái thảm họa
// thảm họa cũng tác động và làm biến mất con người 
species hazard{
	
	float speed <- 0.2#km/#h;
	//geometry shape <- circle(20#m); --> Khi tạo agent từ gis data nó sự tự động được liên kết với một tác nhân 
	// geometry mà mình không cần định nghĩa
	
	reflex expand{
		shape <- shape + (speed * step);
		ask inhabitant overlapping self{
			casualties <- casualties + 1;
			do die;
		}
	}
	
	aspect default {
		draw shape color: #blue;
	}
}

// định nghĩa species evacuation_point --> định nghĩa điểm mà con người sẽ di tản tới khi phát hiện ra hazard(nguy cơ)
species evacuation_point{
	int count_exit <- 0;
	action evacuate_inhabitant {
		count_exit <- count_exit + 1;
	}
	aspect default {
		//draw circle(10#m) color: #green;
		// update evacuation point mỗi khi có people đến được evacaution point
		draw circle(1#m+19#m*count_exit/nb_of_people) color:#green;
	}
}

// định nghĩa species inhabitant --> định nghía species người dân(species nghĩa là loài)
species inhabitant skills:[moving]{
	evacuation_point safety_point;
	float perception_dist <- rnd(min_perception_distance, max_perception_distance);
	bool alerted <- false;
	// chỉ update alerted 1 lần khi mà nó chưa được update thôi
	reflex perceive_hazard when: not alerted{
		alerted <- not empty(hazard at_distance(perception_dist));
	}
	reflex evacuate when: alerted {
		do goto target: safety_point;
		// cái goto target này là from moving skill
		
		if (location distance_to safety_point.location < 2#m){
			ask safety_point {do evacuate_inhabitant();}
			do die;
		}
	}
	aspect default{
		draw circle(1#m) color: #blue;
	}
}

// cái này để display ra 
experiment my_experiment type: gui{
	output {
		display my_display type: 3d{
			species hazard;
			species evacuation_point;
			species inhabitant;
		}
	}
}